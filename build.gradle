buildscript {
    ext {
        kotlin_version = '1.3.50'
        coroutine_version = '1.3.0-M2'
        paper_version = '1.12.2-R0.1-SNAPSHOT'
    }
    repositories {
        if(project.hasProperty('nexusUser') && project.hasProperty('nexusPassword')){
            maven {
                credentials{
                    username "$nexusUser"
                    password "$nexusPassword"
                }
                url 'https://maven.heartpattern.kr/repository/maven-private/'
            }
        }
        else{
            maven{
                url 'https://maven.heartpattern.kr/repository/maven-public/'
            }
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

if(new File('local.gradle').exists())
    apply from: 'local.gradle'

group 'kr.heartpattern'
version '4.0.0-SNAPSHOT'

repositories {
    if(project.hasProperty('nexusUser') && project.hasProperty('nexusPassword')){
        maven {
            credentials{
                username "$nexusUser"
                password "$nexusPassword"
            }
            url 'https://maven.heartpattern.kr/repository/maven-private/'
        }
    }
    else{
        maven{
            url 'https://maven.heartpattern.kr/repository/maven-public/'
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += '-XXLanguage:+InlineClasses'
        freeCompilerArgs += '-Xuse-experimental=kotlin.Experimental'
    }
}

dependencies {
    compileOnly 'kr.heartpattern:Spikot:4.0.0-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot:1.12.2-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:plugin-annotations:1.1.0-SNAPSHOT'

    kapt "org.spigotmc:plugin-annotations:1.1.0-SNAPSHOT"
    kapt "kr.heartpattern:SpikotClassLocator:4.0.0-SNAPSHOT"
    kapt "kr.heartpattern:SpikotAnnotationProcessor:4.0.0-SNAPSHOT"
}

task createPlugin(type: Jar) {
    archiveName 'SpikotAdapter-S1122-Plugin.jar'
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}